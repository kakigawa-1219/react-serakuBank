{"ast":null,"code":"import { signInAction, signOutAction } from './actions';\nimport { push } from 'connected-react-router';\nimport { auth, db } from '../../firebase/index';\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert(\"未入力があります\");\n      return false;\n    }\n\n    return auth.signInWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (!user) {\n        alert('ユーザーIDを取得できません');\n        return false;\n      }\n\n      const uid = user.uid;\n      return db.collection('users').doc(uid).get().then(snapshots => {\n        const data = snapshots.data();\n        dispatch(signInAction({\n          isSignedIn: true,\n          role: data.role,\n          uid: uid,\n          username: data.username\n        }));\n        dispatch(push('/'));\n      });\n    });\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  var regexp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-].+(?:\\.[a-zA-Z0-9-]+)*$/;\n  return async dispatch => {\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert(\"未入力があります\");\n      return false;\n    }\n\n    if (regexp.test(email) === false) {\n      alert(\"メールアドレスが正しくありません\");\n      return false;\n    }\n\n    if (password.length < 6) {\n      alert(\"パスワードは6文字以上で入力してください\");\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致していません\");\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const userInitialData = {\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          username: username\n        };\n        db.collection('users').doc(uid).set(userInitialData).then(() => {\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    auth.signOut().then(() => {\n      dispatch(signOutAction());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ro/Desktop/React1/react-serakuBank/src/reducks/users/operations.js"],"names":["signInAction","signOutAction","push","auth","db","signIn","email","password","dispatch","alert","signInWithEmailAndPassword","then","result","user","uid","collection","doc","get","snapshots","data","isSignedIn","role","username","signUp","confirmPassword","regexp","test","length","createUserWithEmailAndPassword","userInitialData","set","signOut"],"mappings":"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","sourcesContent":["import {signInAction, signOutAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, db} from '../../firebase/index';\n\n\nexport const signIn = (email, password) => {\n    return async (dispatch) =>{\n        if(email === \"\" || password === \"\"){\n            alert(\"未入力があります\");\n            return false\n        }\n     \n        \n        return auth.signInWithEmailAndPassword(email,password)\n        .then(result => {\n                const user = result.user;\n                if (!user) {\n                    alert('ユーザーIDを取得できません');\n                    return false\n                }\n                    const uid = user.uid;\n                return db.collection('users').doc(uid).get()\n                    .then(snapshots => {\n                        const data = snapshots.data();\n                        dispatch(signInAction({\n                            isSignedIn:true,\n                            role:data.role,\n                            uid: uid,\n                            username: data.username\n                        }));\n                        dispatch(push('/'));\n                    \n                    })\n                }\n            )\n    }\n    \n}\n\n\n\n\n\nexport const signUp = (username, email, password, confirmPassword) => {\n    var regexp =/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-].+(?:\\.[a-zA-Z0-9-]+)*$/;\n    return async(dispatch) => {\n        if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\" ){\n            alert(\"未入力があります\");\n            return false\n        }\n        if (regexp.test(email) === false ){\n            alert(\"メールアドレスが正しくありません\");\n            return false\n        }\n        if(password.length < 6 ){\n            alert(\"パスワードは6文字以上で入力してください\");\n            return false\n        }\n        if (password !== confirmPassword ){\n            alert(\"パスワードが一致していません\");\n            return false\n        }\n       \n        return auth.createUserWithEmailAndPassword(email,password).then(result => {\n            const user = result.user;\n\n            if(user) {\n                const uid = user.uid;\n                const userInitialData = {\n                    email: email,\n                    role: \"customer\",\n                    uid: uid,\n                    username: username\n                };\n                db.collection('users').doc(uid).set(userInitialData).then(() => {\n                    dispatch(push('/'));\n                })\n            }\n        })\n    }\n  \n}\n\nexport const signOut = () =>{\n    return async(dispatch) =>{\n        auth.signOut().then(() => {\n            dispatch(signOutAction());\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}