{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ro/Desktop/React/reactapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ro/Desktop/React/reactapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{signInAction}from'./actions';import{push}from'connected-react-router';import{auth,db}from'../../firebase/index';export var signIn=function signIn(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var state,isSignedIn,url,response,username;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:state=getState();isSignedIn=state.users.isSignedIn;if(isSignedIn){_context.next=10;break;}url=\"http://localhost:3001\";_context.next=6;return fetch(url).then(function(res){return res.json();}).catch(function(){return null;});case 6:response=_context.sent;username=response.login;dispatch(signInAction({isSignedIn:true,uid:\"00001\",username:username}));dispatch(push('/'));case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var signUp=function signUp(username,email,password,confirmPassword){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(username===\"\"||email===\"\"||password===\"\"||confirmPassword===\"\")){_context3.next=3;break;}alert(\"未入力があります\");return _context3.abrupt(\"return\",false);case 3:if(!(password!==confirmPassword)){_context3.next=6;break;}alert(\"パスワードが一致していません\");return _context3.abrupt(\"return\",false);case 6:return _context3.abrupt(\"return\",auth.createUserWithEmailAndPassword(email,password).then(function(result){var user=result.user;if(user){var uid=user.uid;var userInitialDate={email:email,role:\"customer\",uid:uid,username:username};db.collection('users').doc(uid).set(userInitialDate).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(push('/'));case 1:case\"end\":return _context2.stop();}}},_callee2);})));}}));case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/ro/Desktop/React/reactapp/src/reducks/users/operations.js"],"names":["signInAction","push","auth","db","signIn","dispatch","getState","state","isSignedIn","users","url","fetch","then","res","json","catch","response","username","login","uid","signUp","email","password","confirmPassword","alert","createUserWithEmailAndPassword","result","user","userInitialDate","role","collection","doc","set"],"mappings":"2SAAA,OAAQA,YAAR,KAA2B,WAA3B,CACA,OAAQC,IAAR,KAAmB,wBAAnB,CACA,OAAQC,IAAR,CAAcC,EAAd,KAAuB,sBAAvB,CAGA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACxB,+FAAO,iBAAOC,QAAP,CAAiBC,QAAjB,6JACGC,KADH,CACWD,QAAQ,EADnB,CAEGE,UAFH,CAEgBD,KAAK,CAACE,KAAN,CAAYD,UAF5B,IAIEA,UAJF,0BAKOE,GALP,CAKa,uBALb,uBAOwBC,CAAAA,KAAK,CAACD,GAAD,CAAL,CACFE,IADE,CACG,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADN,EAEFC,KAFE,CAEI,iBAAM,KAAN,EAFJ,CAPxB,QAOOC,QAPP,eAUOC,QAVP,CAUkBD,QAAQ,CAACE,KAV3B,CAYCb,QAAQ,CAACL,YAAY,CAAC,CAClBQ,UAAU,CAAC,IADO,CAElBW,GAAG,CAAE,OAFa,CAGlBF,QAAQ,CAAEA,QAHQ,CAAD,CAAb,CAAR,CAKAZ,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR,CAjBD,uDAAP,mEAqBH,CAtBM,CA4BP,MAAO,IAAMmB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACH,QAAD,CAAWI,KAAX,CAAkBC,QAAlB,CAA4BC,eAA5B,CAAgD,CAElE,gGAAO,kBAAMlB,QAAN,2HACAY,QAAQ,GAAK,EAAb,EAAmBI,KAAK,GAAK,EAA7B,EAAmCC,QAAQ,GAAK,EAAhD,EAAsDC,eAAe,GAAK,EAD1E,2BAECC,KAAK,CAAC,UAAD,CAAL,CAFD,iCAGQ,KAHR,cAKCF,QAAQ,GAAKC,eALd,2BAMCC,KAAK,CAAC,gBAAD,CAAL,CAND,iCAOQ,KAPR,0CASItB,IAAI,CAACuB,8BAAL,CAAoCJ,KAApC,CAA0CC,QAA1C,EACNV,IADM,CACD,SAAAc,MAAM,CAAI,CACZ,GAAMC,CAAAA,IAAI,CAAGD,MAAM,CAACC,IAApB,CAEA,GAAGA,IAAH,CAAS,CACL,GAAMR,CAAAA,GAAG,CAAGQ,IAAI,CAACR,GAAjB,CACA,GAAMS,CAAAA,eAAe,CAAG,CACpBP,KAAK,CAAEA,KADa,CAEpBQ,IAAI,CAAE,UAFc,CAGpBV,GAAG,CAAEA,GAHe,CAIpBF,QAAQ,CAAEA,QAJU,CAAxB,CAMAd,EAAE,CAAC2B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BZ,GAA3B,EAAgCa,GAAhC,CAAoCJ,eAApC,EACChB,IADD,sEACM,wIACFP,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR,CADE,wDADN,IAIH,CACJ,CAjBM,CATJ,0DAAP,iEA6BH,CA/BM","sourcesContent":["import {signInAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, db} from '../../firebase/index';\n\n\nexport const signIn = () => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const isSignedIn = state.users.isSignedIn;\n\n        if (!isSignedIn) {\n            const url = \"http://localhost:3001\";\n\n            const response = await fetch(url)\n                                .then(res => res.json())\n                                .catch(() => null);\n            const username = response.login;\n\n            dispatch(signInAction({\n                isSignedIn:true,\n                uid: \"00001\",\n                username: username\n            }));\n            dispatch(push('/'));\n            \n        }\n    }\n}\n\n\n\n\n\nexport const signUp = (username, email, password, confirmPassword) => {\n\n    return async(dispatch) => {\n        if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\" ){\n            alert(\"未入力があります\")\n            return false\n        }\n        if (password !== confirmPassword ){\n            alert(\"パスワードが一致していません\")\n            return false\n        }\n        return auth.createUserWithEmailAndPassword(email,password)\n        .then(result => {\n            const user = result.user;\n\n            if(user) {\n                const uid = user.uid;\n                const userInitialDate = {\n                    email: email,\n                    role: \"customer\",\n                    uid: uid,\n                    username: username\n                };\n                db.collection('users').doc(uid).set(userInitialDate)\n                .then(async() => {\n                    dispatch(push('/'))\n                })\n            }\n        })\n    }\n  \n}"]},"metadata":{},"sourceType":"module"}