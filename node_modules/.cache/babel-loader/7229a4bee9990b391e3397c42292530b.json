{"ast":null,"code":"import { signInAction, signOutAction } from './actions';\nimport { push } from 'connected-react-router';\nimport { auth, db } from '../../firebase/index';\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert(\"未入力があります\");\n      return false;\n    }\n\n    return auth.signInWithEmailAndPassword(email.password).then(result => {\n      const userState = result.user;\n\n      if (!userState) {\n        dispatch(hideLoadingAction());\n        throw new Error('ユーザーIDを取得できません');\n      }\n\n      const userId = userState.uid;\n      const user = result.user;\n      alert(\"AB\");\n\n      if (user) {\n        const uid = user.uid;\n        alert(\"A\");\n        dispatch(push('/'));\n        db.collection('users').doc(uid).get().then(snapshot => {\n          const data = snapshot.data();\n          dispatch(signInAction({\n            isSignedIn: true,\n            role: data.role,\n            uid: uid,\n            username: data.username\n          }));\n          dispatch(push('/'));\n          alert(\"A\");\n        });\n      }\n    });\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async dispatch => {\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert(\"未入力があります\");\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致していません\");\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const userInitialData = {\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          username: username\n        };\n        dispatch(push('/'));\n        db.collection('users').doc(uid).set(userInitialData).then(() => {\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    auth.signOut().then(() => {\n      dispatch(signOutAction());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ro/Desktop/React/reactapp/src/reducks/users/operations.js"],"names":["signInAction","signOutAction","push","auth","db","signIn","email","password","dispatch","alert","signInWithEmailAndPassword","then","result","userState","user","hideLoadingAction","Error","userId","uid","collection","doc","get","snapshot","data","isSignedIn","role","username","signUp","confirmPassword","createUserWithEmailAndPassword","userInitialData","set","signOut"],"mappings":"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","sourcesContent":["import {signInAction, signOutAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, db} from '../../firebase/index';\n\n\nexport const signIn = (email, password) => {\n    return async (dispatch) =>{\n        if(email === \"\" || password === \"\"){\n            alert(\"未入力があります\");\n            return false\n        }\n        return auth.signInWithEmailAndPassword(email.password).then(result => {\n            const userState = result.user\n            if (!userState) {\n                dispatch(hideLoadingAction());\n                throw new Error('ユーザーIDを取得できません');\n            }\n            const userId = userState.uid;\n\n            \n                const user = result.user;\n                alert(\"AB\");\n                if(user) {\n                    const uid = user.uid;\n                    alert(\"A\");\n                    dispatch(push('/'));\n                    db.collection('users').doc(uid).get()\n                    .then(snapshot => {\n                        const data = snapshot.data();\n                    \n                        dispatch(signInAction({\n                            isSignedIn:true,\n                            role:data.role,\n                            uid: uid,\n                            username: data.username\n                        }));\n                        dispatch(push('/'));\n                        alert(\"A\");\n                    })\n                }\n            })\n    }\n    \n}\n\n\n\n\n\nexport const signUp = (username, email, password, confirmPassword) => {\n\n    return async(dispatch) => {\n        if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\" ){\n            alert(\"未入力があります\");\n            return false\n        }\n        if (password !== confirmPassword ){\n            alert(\"パスワードが一致していません\");\n            return false\n        }\n        return auth.createUserWithEmailAndPassword(email,password).then(result => {\n            const user = result.user;\n\n            if(user) {\n                const uid = user.uid;\n                const userInitialData = {\n                    email: email,\n                    role: \"customer\",\n                    uid: uid,\n                    username: username\n                };\n                    dispatch(push('/'));\n                db.collection('users').doc(uid).set(userInitialData).then(() => {\n                    dispatch(push('/'));\n                })\n            }\n        })\n    }\n  \n}\n\nexport const signOut = () =>{\n    return async(dispatch) =>{\n        auth.signOut().then(() => {\n            dispatch(signOutAction());\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}