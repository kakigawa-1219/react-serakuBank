{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ro/Desktop/react-serakuBank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ro/Desktop/react-serakuBank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{signInAction,signOutAction}from'./actions';import{push}from'connected-react-router';import{auth,db}from'../../firebase/index';export var signIn=function signIn(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(email===\"\"||password===\"\")){_context.next=3;break;}alert(\"未入力があります\");return _context.abrupt(\"return\",false);case 3:return _context.abrupt(\"return\",auth.signInWithEmailAndPassword(email,password).then(function(result){var user=result.user;if(!user){alert('ユーザーIDを取得できません');return false;}var uid=user.uid;return db.collection('users').doc(uid).get().then(function(snapshots){var data=snapshots.data();dispatch(signInAction({isSignedIn:true,role:data.role,uid:uid,username:data.username}));dispatch(push('/'));});}));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var signUp=function signUp(username,email,password,confirmPassword){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(username===\"\"||email===\"\"||password===\"\"||confirmPassword===\"\")){_context2.next=3;break;}alert(\"未入力があります\");return _context2.abrupt(\"return\",false);case 3:if(!(password!==confirmPassword)){_context2.next=6;break;}alert(\"パスワードが一致していません\");return _context2.abrupt(\"return\",false);case 6:return _context2.abrupt(\"return\",auth.createUserWithEmailAndPassword(email,password).then(function(result){var user=result.user;if(user){var uid=user.uid;var userInitialData={email:email,role:\"customer\",uid:uid,username:username};db.collection('users').doc(uid).set(userInitialData).then(function(){dispatch(push('/'));});}}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var signOut=function signOut(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:auth.signOut().then(function(){dispatch(signOutAction());});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/ro/Desktop/react-serakuBank/src/reducks/users/operations.js"],"names":["signInAction","signOutAction","push","auth","db","signIn","email","password","dispatch","alert","signInWithEmailAndPassword","then","result","user","uid","collection","doc","get","snapshots","data","isSignedIn","role","username","signUp","confirmPassword","createUserWithEmailAndPassword","userInitialData","set","signOut"],"mappings":"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","sourcesContent":["import {signInAction, signOutAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, db} from '../../firebase/index';\n\n\nexport const signIn = (email, password) => {\n    return async (dispatch) =>{\n        if(email === \"\" || password === \"\"){\n            alert(\"未入力があります\");\n            return false\n        }\n        return auth.signInWithEmailAndPassword(email,password)\n        .then(result => {\n                const user = result.user;\n                if (!user) {\n                    alert('ユーザーIDを取得できません');\n                    return false\n                }\n                    const uid = user.uid;\n                return db.collection('users').doc(uid).get()\n                    .then(snapshots => {\n                        const data = snapshots.data();\n                        dispatch(signInAction({\n                            isSignedIn:true,\n                            role:data.role,\n                            uid: uid,\n                            username: data.username\n                        }));\n                        dispatch(push('/'));\n                    \n                    })\n                }\n            )\n    }\n    \n}\n\n\n\n\n\nexport const signUp = (username, email, password, confirmPassword) => {\n\n    return async(dispatch) => {\n        if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\" ){\n            alert(\"未入力があります\");\n            return false\n        }\n        if (password !== confirmPassword ){\n            alert(\"パスワードが一致していません\");\n            return false\n        }\n        return auth.createUserWithEmailAndPassword(email,password).then(result => {\n            const user = result.user;\n\n            if(user) {\n                const uid = user.uid;\n                const userInitialData = {\n                    email: email,\n                    role: \"customer\",\n                    uid: uid,\n                    username: username\n                };\n                db.collection('users').doc(uid).set(userInitialData).then(() => {\n                    dispatch(push('/'));\n                })\n            }\n        })\n    }\n  \n}\n\nexport const signOut = () =>{\n    return async(dispatch) =>{\n        auth.signOut().then(() => {\n            dispatch(signOutAction());\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}