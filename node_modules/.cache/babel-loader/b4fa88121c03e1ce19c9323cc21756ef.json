{"ast":null,"code":"import { signInAction } from './actions';\nimport { push } from 'connected-react-router';\nimport { auth, db } from '../../firebase/index';\nexport const signIn = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn;\n\n    if (!isSignedIn) {\n      const url = \"http://localhost:3001\";\n      const response = await fetch(url).then(res => res.json()).catch(() => null);\n      const username = response.login;\n      dispatch(signInAction({\n        isSignedIn: true,\n        uid: \"00001\",\n        username: username\n      }));\n      dispatch(push('/'));\n    }\n  };\n};\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async dispatch => {\n    if (username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert(\"未入力があります\");\n      return false;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致していません\");\n      return false;\n    }\n\n    return auth.createUserWithEmailAndPassword(email, password).then(result => {\n      const user = result.user;\n\n      if (user) {\n        const uid = user.uid;\n        const userInitialDate = {\n          email: email,\n          role: \"customer\",\n          uid: uid,\n          username: username\n        };\n        db.collection('users').doc(uid).set(userInitialDate).then(async () => {\n          dispatch(push('/'));\n        });\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ro/Desktop/React/reactapp/src/reducks/users/operations.js"],"names":["signInAction","push","auth","db","signIn","dispatch","getState","state","isSignedIn","users","url","response","fetch","then","res","json","catch","username","login","uid","signUp","email","password","confirmPassword","alert","createUserWithEmailAndPassword","result","user","userInitialDate","role","collection","doc","set"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,WAA3B;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AACA,SAAQC,IAAR,EAAcC,EAAd,QAAuB,sBAAvB;AAGA,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYD,UAA/B;;AAEA,QAAI,CAACA,UAAL,EAAiB;AACb,YAAME,GAAG,GAAG,uBAAZ;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAL,CACFG,IADE,CACGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADV,EAEFC,KAFE,CAEI,MAAM,IAFV,CAAvB;AAGA,YAAMC,QAAQ,GAAGN,QAAQ,CAACO,KAA1B;AAEAb,MAAAA,QAAQ,CAACL,YAAY,CAAC;AAClBQ,QAAAA,UAAU,EAAC,IADO;AAElBW,QAAAA,GAAG,EAAE,OAFa;AAGlBF,QAAAA,QAAQ,EAAEA;AAHQ,OAAD,CAAb,CAAR;AAKAZ,MAAAA,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR;AAEH;AACJ,GApBD;AAqBH,CAtBM;AA4BP,OAAO,MAAMmB,MAAM,GAAG,CAACH,QAAD,EAAWI,KAAX,EAAkBC,QAAlB,EAA4BC,eAA5B,KAAgD;AAElE,SAAO,MAAMlB,QAAN,IAAmB;AACtB,QAAGY,QAAQ,KAAK,EAAb,IAAmBI,KAAK,KAAK,EAA7B,IAAmCC,QAAQ,KAAK,EAAhD,IAAsDC,eAAe,KAAK,EAA7E,EAAiF;AAC7EC,MAAAA,KAAK,CAAC,UAAD,CAAL;AACA,aAAO,KAAP;AACH;;AACD,QAAIF,QAAQ,KAAKC,eAAjB,EAAkC;AAC9BC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA,aAAO,KAAP;AACH;;AACD,WAAOtB,IAAI,CAACuB,8BAAL,CAAoCJ,KAApC,EAA0CC,QAA1C,EACNT,IADM,CACDa,MAAM,IAAI;AACZ,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;;AAEA,UAAGA,IAAH,EAAS;AACL,cAAMR,GAAG,GAAGQ,IAAI,CAACR,GAAjB;AACA,cAAMS,eAAe,GAAG;AACpBP,UAAAA,KAAK,EAAEA,KADa;AAEpBQ,UAAAA,IAAI,EAAE,UAFc;AAGpBV,UAAAA,GAAG,EAAEA,GAHe;AAIpBF,UAAAA,QAAQ,EAAEA;AAJU,SAAxB;AAMAd,QAAAA,EAAE,CAAC2B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BZ,GAA3B,EAAgCa,GAAhC,CAAoCJ,eAApC,EACCf,IADD,CACM,YAAW;AACbR,UAAAA,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR;AACH,SAHD;AAIH;AACJ,KAjBM,CAAP;AAkBH,GA3BD;AA6BH,CA/BM","sourcesContent":["import {signInAction} from './actions';\nimport {push} from 'connected-react-router';\nimport {auth, db} from '../../firebase/index';\n\n\nexport const signIn = () => {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const isSignedIn = state.users.isSignedIn;\n\n        if (!isSignedIn) {\n            const url = \"http://localhost:3001\";\n\n            const response = await fetch(url)\n                                .then(res => res.json())\n                                .catch(() => null);\n            const username = response.login;\n\n            dispatch(signInAction({\n                isSignedIn:true,\n                uid: \"00001\",\n                username: username\n            }));\n            dispatch(push('/'));\n            \n        }\n    }\n}\n\n\n\n\n\nexport const signUp = (username, email, password, confirmPassword) => {\n\n    return async(dispatch) => {\n        if(username === \"\" || email === \"\" || password === \"\" || confirmPassword === \"\" ){\n            alert(\"未入力があります\")\n            return false\n        }\n        if (password !== confirmPassword ){\n            alert(\"パスワードが一致していません\")\n            return false\n        }\n        return auth.createUserWithEmailAndPassword(email,password)\n        .then(result => {\n            const user = result.user;\n\n            if(user) {\n                const uid = user.uid;\n                const userInitialDate = {\n                    email: email,\n                    role: \"customer\",\n                    uid: uid,\n                    username: username\n                };\n                db.collection('users').doc(uid).set(userInitialDate)\n                .then(async() => {\n                    dispatch(push('/'))\n                })\n            }\n        })\n    }\n  \n}"]},"metadata":{},"sourceType":"module"}